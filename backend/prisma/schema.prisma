// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  username  String  @unique
  password String
  hashedRefreshToken String?

  blackMatches Match[] @relation("Match_black")
  whiteMatches Match[] @relation("Match_white")
}

model Match {
  id    Int     @id @default(autoincrement())

  initialTime Int
  incrementTime Int

  blackPlayerId Int?
  whitePlayerId Int?
  blackPlayer User? @relation(fields: [blackPlayerId], references: [id], name: "Match_black", onDelete: SetNull)
  whitePlayer User? @relation(fields: [whitePlayerId], references: [id], name: "Match_white", onDelete: SetNull)

  winner Winner  // 'BLACK', 'WHITE', or 'DRAW'
  endReason String // Why the game ended
  blackScore Int  // Final number of black disks
  whiteScore Int  // Final number of white disks
  timeLeftBlack Int  // Time left for black player
  timeLeftWhite Int  // Time left for white player

  createdAt DateTime @default(now()) // Track when match was created
}

enum Winner {
  black
  white
  draw
}